length(q1)
q1<-c(55,140,91,122,111,185,203,101,76,145,95,101,196,45,299,226,65,70,196,72,121,171,151,113,112,67,276,125,100,81,122,71,158,78,162,128,96,79,67,119)
length(q1)
?boot
library(boot)
boot(q1,mean)
?boot
boot(q1,mean,100)
?boot
q1[-1]
q1[-1:2]
q1[-(1:2)]
sample(q1,40,replace=T)
?boot
for ( i in 1:1000){#
	x<-sample(q1,40,replace=T)#
	bootq1<-c(bootq1,x)#
}
bootq1<-NULL#
for ( i in 1:1000){#
	x<-sample(q1,40,replace=T)#
	bootq1<-c(bootq1,x)#
}
hist(bootq1)
bootq1<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
}#
print(MSE<-sum(SS)/1000)#
print(se<-sqrt(MSE))#
print(margin<-2*sqrt(MSE))#
print(SD<-sd(q1)#
print(CV<-100*(SD)/mean(q1))
print(MSE<-sum(SS)/1000)#
print(se<-sqrt(MSE))#
print(margin<-2*sqrt(MSE))#
print(SD<-sd(q1))#
print(CV<-100*(SD)/mean(q1))
bootq1<-bootT<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
	T<-sqrt(40)*(x-mean(q1))/sd(q1)#
	bootT<-c(bootT,T)#
}
quantile(bootT,p=0.975)
t_U<-as.numeric(quantile(bootT,p=0.975))#
t_L<-as.numeric(quantile(bootT,p=0.025))
c(mean(q1)-t_L*sd/sqrt(40)),mean(q1-t_U*sd/sqrt(40))
c(mean(q1)-t_L*sd/sqrt(40),mean(q1-t_U*sd/sqrt(40))
)
c(mean(q1)-t_L*SD/sqrt(40),mean(q1-t_U*SD/sqrt(40)))
c(mean(q1)-t_L*SD/sqrt(40),mean(q1+t_U*SD/sqrt(40)))
SD
mean(q1)
SD/sqrt(40)
t_L
c(mean(q1)+t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))
c(mean(q1)-t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))
?boot.ci
boot.ci(bootq1,type="all")
boot(q1,mean,1000)
p0<-which(bootq1>mean(q1))
p0
p0<-mean(bootq1>meanq1)
p0<-mean(bootq1>mean(q1))
p0
qnorm(p0)
a.num<-a.dem<-NULL#
#
for (i in 1:1000){#
	bootq1.new<-bootq1[-i]#
	n.mean<-mean(bootq1.new)#
	a.num[i]<-(n.mean-bootq1[i])^3#
	a.dem[i]<-(n.mean-bootq1[i])^2#
}#
#
a<-sum(a.num)/(6*(sum(a.dem))^3/2)
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0
z0<-qnorm(p0)
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0
z_u
z_l
pnorm(z_u)
c(quantile(bootq1,p=pnorm(z_l)),quantile(bootq1,p=pnorm(z_u)))
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)
length(htp)
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)
length(lym)
print(q3<-cbind(htp,lym))
sample(1:18,18,replace=T)
z<-sample(1:18,18,replace=T)
htp[z]
q3[z,]
cor(htp,lym)
cor(q3)
cor(q3[2,1])
cor(q3)[2,1]
boot.cor<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	boot.cor<-c(boot.cor,rho.b)#
}
biv.boot.cor<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	biv.boot.cor<-c(boot.cor,rho.b)#
}
rho<-cor(htp,lym)#
bootq3<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution ####
#
### BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3>rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
a.num<-a.dem<-NULL#
#
for (i in 1:1000){#
	bootq3.new<-bootq3[-i]#
	n.mean<-mean(bootq3.new)#
	a.num[i]<-(n.mean-bootq3[i])^3#
	a.dem[i]<-(n.mean-bootq3[i])^2#
}#
#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq1,p=pnorm(z_l)),quantile(bootq1,p=pnorm(z_u)))
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))
names(lm)
q4<-lm(lym~htp)
print(q4)
summary(q4)
names(summary(q4))
names(summary(q4))$residuals
(summary(q4))$residuals
q4$residuals
q4$coefficients
beta<-as.numeric(q4$coefficients[2])
e<-q4$residuals
beta*htp+e
names(q4)
names(q4)$effects
q4$effects
q4$se
summary(q4)$sigam
summary(q4)$sigma
summary(q4)$terms
summary(q4)$cov.unscaled
sqrt(summary(q4)$cov.unscaled[2,2])
cov(q4)
summary.lm
summary.lm(q4)
coef(q4)
coef(q4)[,2]
coef(summary(q4))[,2]
coef(summary(q4))[2,2]
q4<-lm(lym~htp)#
e<-q4$residuals#
beta<-as.numeric(q4$coefficients[2])#
boot.B<-boot.T<-NULL#
for ( i in 1:1000){#
	e.b<-sample(e,18,replace=T)#
	n.lym<-beta*htp+e.b#
	fit<-lm(n.lym~htp)#
	beta.b<-as.numeric(coef(fit)[2])#
	se.b<-coef(summary(fit))[2,2]#
	t.b<-beta.b/se.b#
	boot.B<-c(boot.B,beta.b)#
	boot.T<-c(boot.T,t.b)#
}
se<-as.numeric(coef(summary(q4))[2,2])
se
c(beta-t_u*se,beta-t_l*se)
t_u<-quantile(boot.T,p=0.975)#
t_l<-quantile(boot.T,p=0.025)#
#
c(beta-t_u*se,beta-t_l*se)
t_u<-as.numeric(quantile(boot.T,p=0.975))#
t_l<-as.numeric(quantile(boot.T,p=0.025))
c(beta-t_u*se,beta-t_l*se)
Question 1 ####
#
q1<-c(55,140,91,122,111,185,203,101,76,145,95,101,196,45,299,226,65,70,196,72,121,171,151,113,112,67,276,125,100,81,122,71,158,78,162,128,96,79,67,119)#
bootq1<-bootT<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
	T<-sqrt(40)*(x-mean(q1))/sd(q1)#
	bootT<-c(bootT,T)#
}#
print(MSE<-sum(SS)/1000)                  ### Mean squared error ####
print(se<-sqrt(MSE))                      ### Standard error estimating sampple mean ####
print(margin<-2*sqrt(MSE))                ### Margin of error for estimating sample mean ####
print(SD<-sd(q1))                         ### Sample standard deviation ####
print(CV<-100*(SD)/mean(q1))              ### Coefficient of Variation  ####
#
t_U<-as.numeric(quantile(bootT,p=0.975))#
t_L<-as.numeric(quantile(bootT,p=0.025))#
#
### Question 2 ####
### 95% CI for mean using t-pivot ####
c(mean(q1)-t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))#
### Find z0 ####
#
p0<-mean(bootq1>mean(q1))#
z0<-qnorm(p0)#
#
### Find a ####
#
a.num<-a.dem<-NULL#
#
for (i in 1:1000){#
	bootq1.new<-bootq1[-i]#
	n.mean<-mean(bootq1.new)#
	a.num[i]<-(n.mean-bootq1[i])^3#
	a.dem[i]<-(n.mean-bootq1[i])^2#
}#
#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for mean using BCA ####
#
c(quantile(bootq1,p=pnorm(z_l)),quantile(bootq1,p=pnorm(z_u)))#
#
### Question 3 ####
#
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution ####
#
### BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3>rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
a.num<-a.dem<-NULL#
#
for (i in 1:1000){#
	bootq3.new<-bootq3[-i]#
	n.mean<-mean(bootq3.new)#
	a.num[i]<-(n.mean-bootq3[i])^3#
	a.dem[i]<-(n.mean-bootq3[i])^2#
}#
#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))#
### Question 4 ####
#
q4<-lm(lym~htp)#
e<-q4$residuals#
beta<-as.numeric(q4$coefficients[2])#
se<-as.numeric(coef(summary(q4))[2,2])#
boot.B<-boot.T<-NULL#
for ( i in 1:1000){#
	e.b<-sample(e,18,replace=T)#
	n.lym<-beta*htp+e.b#
	fit<-lm(n.lym~htp)#
	beta.b<-as.numeric(coef(fit)[2])#
	se.b<-coef(summary(fit))[2,2]#
	t.b<-beta.b/se.b#
	boot.B<-c(boot.B,beta.b)#
	boot.T<-c(boot.T,t.b)#
}#
#
### 95% CI using Fixed-X bootstrap sampling and t-pivot ####
#
t_u<-as.numeric(quantile(boot.T,p=0.975))#
t_l<-as.numeric(quantile(boot.T,p=0.025))#
#
c(beta-t_u*se,beta-t_l*se)
A<-a.num<-a.dem<-NULL#
#
for (i in 1:40){#
#
	q1.new<-q1[-i]#
	n.mean<-mean(q1.new)#
	A<-c(A,n.mean)#
}
A
A<-a.num<-a.dem<-NULL#
#
for (i in 1:40){#
#
	q1.new<-q1[-i]#
	n.mean<-mean(q1.new)#
	A<-c(A,n.mean)#
}#
#
for (i in 1:40){ #
    a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
	}#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))
q3[-1,]
q3
cor(q3)
p0<-mean(bootq3>rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))
Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))
a.num
a.dem
A
mean(A)
sum(a.num)
sum(a.dem)
sum(a.dem)^3/2
sum(a.dem)^(3/2)
6*sum(a.dem)^(3/2)
Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^(3/2)))
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))
z_u
z0
p0<-mean(bootq3>rho)#
z0<-qnorm(p0)
z0
summary(bootq3)
bootq3<-NULL#
for (i in 1:1000){#
	set.seed(100+i)#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution
summary(bootq3)
bootq3<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}
summary(bootq3)
z
q3[z,]
cor(q3[z,])[2,1]
?set.seed
z<-sample(1:18,18,replace=T)
sample(1:18,18,replace=T)
bootq3<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution
for (i in 1:1000){#
	z<-sample(1:18,18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}
p0<-mean(bootq3>rho)#
z0<-qnorm(p0)
z0
summary(bootq3)
sample(1:18,replace=T)
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}
summary(bootq3)
bootq3<-NULL
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	bootq3<-c(bootq3,rho.b)#
}
summary(bootq3)
for (i in 1:10){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(q3[z,])[2,1]#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}
q3(z)
q3[z,]
bootq3<-NULL#
for (i in 1:3){#
	z<-sample(1:18,replace=T)#
	print(q3[z,])#
	rho.b<-cor(q3[z,])[2,1]#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}
bootq3<-NULL#
for (i in 1:3){#
	z<-sample(1:18,replace=T)#
	print(q3[z,])#
	rho.b<-cor(q3[z,])#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}
for (i in 1:3){#
	z<-sample(1:18,replace=T)#
	print(q3[z,])#
	rho.b<-cor(htp[z],lym[z])#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}
for (i in 1:3){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:3){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution
Question 3 ####
#
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution ####
#
### BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3<rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^(3/2)))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))
Question 1 ####
#
q1<-c(55,140,91,122,111,185,203,101,76,145,95,101,196,45,299,226,65,70,196,72,121,171,151,113,112,67,276,125,100,81,122,71,158,78,162,128,96,79,67,119)#
bootq1<-bootT<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
	T<-sqrt(40)*(x-mean(q1))/sd(q1)#
	bootT<-c(bootT,T)#
}#
print(MSE<-sum(SS)/1000)                  ### Mean squared error ####
print(se<-sqrt(MSE))                      ### Standard error estimating sampple mean ####
print(margin<-2*sqrt(MSE))                ### Margin of error for estimating sample mean ####
print(SD<-sd(q1))                         ### Sample standard deviation ####
print(CV<-100*(SD)/mean(q1))              ### Coefficient of Variation  ####
#
t_U<-as.numeric(quantile(bootT,p=0.975))#
t_L<-as.numeric(quantile(bootT,p=0.025))#
#
### Question 2 ####
### 95% CI for mean using t-pivot ####
c(mean(q1)-t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))#
### Find z0 ####
#
p0<-mean(bootq1>mean(q1))#
z0<-qnorm(p0<#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:40){#
#
	q1.new<-q1[-i]#
	n.mean<-mean(q1.new)#
	A<-c(A,n.mean)#
}#
#
for (i in 1:40){ #
    a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
	}#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for mean using BCA ####
#
c(quantile(bootq1,p=pnorm(z_l)),quantile(bootq1,p=pnorm(z_u)))#
#
### Question 3 ####
#
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	print(rho.b)#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution ####
#
### BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3<rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^(3/2)))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))#
### Question 4 ####
#
q4<-lm(lym~htp)#
e<-q4$residuals#
beta<-as.numeric(q4$coefficients[2])#
se<-as.numeric(coef(summary(q4))[2,2])#
boot.B<-boot.T<-NULL#
for ( i in 1:1000){#
	e.b<-sample(e,18,replace=T)#
	n.lym<-beta*htp+e.b#
	fit<-lm(n.lym~htp)#
	beta.b<-as.numeric(coef(fit)[2])#
	se.b<-coef(summary(fit))[2,2]#
	t.b<-beta.b/se.b#
	boot.B<-c(boot.B,beta.b)#
	boot.T<-c(boot.T,t.b)#
}#
#
### 95% CI using Fixed-X bootstrap sampling and t-pivot ####
#
t_u<-as.numeric(quantile(boot.T,p=0.975))#
t_l<-as.numeric(quantile(boot.T,p=0.025))#
#
c(beta-t_u*se,beta-t_l*se)
Question 1 ####
#
q1<-c(55,140,91,122,111,185,203,101,76,145,95,101,196,45,299,226,65,70,196,72,121,171,151,113,112,67,276,125,100,81,122,71,158,78,162,128,96,79,67,119)#
bootq1<-bootT<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
	T<-sqrt(40)*(x-mean(q1))/sd(q1)#
	bootT<-c(bootT,T)#
}#
print(MSE<-sum(SS)/1000)                  ### Mean squared error ####
print(se<-sqrt(MSE))                      ### Standard error estimating sampple mean ####
print(margin<-2*sqrt(MSE))                ### Margin of error for estimating sample mean ####
print(SD<-sd(q1))                         ### Sample standard deviation ####
print(CV<-100*(SD)/mean(q1))              ### Coefficient of Variation  ####
#
t_U<-as.numeric(quantile(bootT,p=0.975))#
t_L<-as.numeric(quantile(bootT,p=0.025))#
#
### Question 2 ####
### 95% CI for mean using t-pivot ####
c(mean(q1)-t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))#
### Find z0 ####
#
p0<-mean(bootq1>mean(q1))#
z0<-qnorm(p0<#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:40){#
#
	q1.new<-q1[-i]#
	n.mean<-mean(q1.new)#
	A<-c(A,n.mean)#
}#
#
for (i in 1:40){ #
    a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
	}#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for mean using BCA ####
#
c(quantile(bootq1,p=pnorm(z_l)),quantile(bootq1,p=pnorm(z_u)))#
#
### Question 3 ####
#
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution ####
#
### BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3<rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^(3/2)))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))#
### Question 4 ####
#
q4<-lm(lym~htp)#
e<-q4$residuals#
beta<-as.numeric(q4$coefficients[2])#
se<-as.numeric(coef(summary(q4))[2,2])#
boot.B<-boot.T<-NULL#
for ( i in 1:1000){#
	e.b<-sample(e,18,replace=T)#
	n.lym<-beta*htp+e.b#
	fit<-lm(n.lym~htp)#
	beta.b<-as.numeric(coef(fit)[2])#
	se.b<-coef(summary(fit))[2,2]#
	t.b<-beta.b/se.b#
	boot.B<-c(boot.B,beta.b)#
	boot.T<-c(boot.T,t.b)#
}#
#
### 95% CI using Fixed-X bootstrap sampling and t-pivot ####
#
t_u<-as.numeric(quantile(boot.T,p=0.975))#
t_l<-as.numeric(quantile(boot.T,p=0.025))#
#
c(beta-t_u*se,beta-t_l*se)
z_l
p0
summary(bootq3)
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	bootq3<-c(bootq3,rho.b)#
}
summary(bootq3)
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	bootq3<-c(bootq3,rho.b)#
}
summary(bootq3)
BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3<rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^(3/2)))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))
Question 1 ####
#
q1<-c(55,140,91,122,111,185,203,101,76,145,95,101,196,45,299,226,65,70,196,72,121,171,151,113,112,67,276,125,100,81,122,71,158,78,162,128,96,79,67,119)#
bootq1<-bootT<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
	T<-sqrt(40)*(x-mean(q1))/sd(q1)#
	bootT<-c(bootT,T)#
}#
print(MSE<-sum(SS)/1000)                  ### Mean squared error ####
print(se<-sqrt(MSE))                      ### Standard error estimating sampple mean ####
print(margin<-2*sqrt(MSE))                ### Margin of error for estimating sample mean ####
print(SD<-sd(q1))                         ### Sample standard deviation ####
print(CV<-100*(SD)/mean(q1))              ### Coefficient of Variation  ####
#
t_U<-as.numeric(quantile(bootT,p=0.975))#
t_L<-as.numeric(quantile(bootT,p=0.025))#
#
### Question 2 ####
### 95% CI for mean using t-pivot ####
c(mean(q1)-t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))#
### Find z0 ####
#
p0<-mean(bootq1>mean(q1))#
z0<-qnorm(p0)
z0
Question 1 ####
#
q1<-c(55,140,91,122,111,185,203,101,76,145,95,101,196,45,299,226,65,70,196,72,121,171,151,113,112,67,276,125,100,81,122,71,158,78,162,128,96,79,67,119)#
bootq1<-bootT<-NULL#
for ( i in 1:1000){#
	x<-mean(sample(q1,40,replace=T))#
	bootq1<-c(bootq1,x)#
	SS<-(x-mean(q1))^2#
	T<-sqrt(40)*(x-mean(q1))/sd(q1)#
	bootT<-c(bootT,T)#
}#
print(MSE<-sum(SS)/1000)                  ### Mean squared error ####
print(se<-sqrt(MSE))                      ### Standard error estimating sampple mean ####
print(margin<-2*sqrt(MSE))                ### Margin of error for estimating sample mean ####
print(SD<-sd(q1))                         ### Sample standard deviation ####
print(CV<-100*(SD)/mean(q1))              ### Coefficient of Variation  ####
#
t_U<-as.numeric(quantile(bootT,p=0.975))#
t_L<-as.numeric(quantile(bootT,p=0.025))#
#
### Question 2 ####
### 95% CI for mean using t-pivot ####
c(mean(q1)-t_U*SD/sqrt(40),mean(q1-t_L*SD/sqrt(40)))#
### Find z0 ####
#
p0<-mean(bootq1>mean(q1))#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:40){#
#
	q1.new<-q1[-i]#
	n.mean<-mean(q1.new)#
	A<-c(A,n.mean)#
}#
#
for (i in 1:40){ #
    a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
	}#
print(a<-sum(a.num)/(6*(sum(a.dem))^3/2))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for mean using BCA ####
#
c(quantile(bootq1,p=pnorm(z_l)),quantile(bootq1,p=pnorm(z_u)))#
#
### Question 3 ####
#
htp<-c(2276,3724,2723,4020,4011,2035,1540,1300,2240,2467,3700,1501,2907,2898,2783,2870,3263,2780)#
lym<-c(2830,5488,2904,5528,4966,3135,2079,1755,3080,2363,5087,2821,5130,4830,4690,3570,3480,3823)#
print(q3<-cbind(htp,lym))#
rho<-cor(htp,lym)#
bootq3<-boothtp<-bootlym<-NULL#
for (i in 1:1000){#
	z<-sample(1:18,replace=T)#
	rho.b<-cor(htp[z],lym[z])#
	bootq3<-c(bootq3,rho.b)#
}                                              ### Bivariate bootstrap sampling distribution ####
#
### BCA ####
#
### Find z0 ####
#
p0<-mean(bootq3<rho)#
z0<-qnorm(p0)#
#
### Find a ####
#
A<-a.num<-a.dem<-NULL#
#
for (i in 1:18){#
#
	q3.new<-q3[-i,]#
	n.cor<-cor(q3.new)[2,1]#
	A<-c(A,n.cor)#
}#
#
for (i in 1:18){#
	a.num[i]<-(mean(A)-A[i])^3#
	a.dem[i]<-(mean(A)-A[i])^2#
}#
print(a<-sum(a.num)/(6*(sum(a.dem))^(3/2)))#
#
z_u<-(z0+1.96)/(1-a*(z0+1.96)) +z0#
z_l<-(z0-1.96)/(1-a*(z0-1.96)) +z0#
#
### 95% CI for rho using BCA ####
#
c(quantile(bootq3,p=pnorm(z_l)),quantile(bootq3,p=pnorm(z_u)))#
### Question 4 ####
#
q4<-lm(lym~htp)#
e<-q4$residuals#
beta<-as.numeric(q4$coefficients[2])#
se<-as.numeric(coef(summary(q4))[2,2])#
boot.B<-boot.T<-NULL#
for ( i in 1:1000){#
	e.b<-sample(e,18,replace=T)#
	n.lym<-beta*htp+e.b#
	fit<-lm(n.lym~htp)#
	beta.b<-as.numeric(coef(fit)[2])#
	se.b<-coef(summary(fit))[2,2]#
	t.b<-beta.b/se.b#
	boot.B<-c(boot.B,beta.b)#
	boot.T<-c(boot.T,t.b)#
}#
#
### 95% CI using Fixed-X bootstrap sampling and t-pivot ####
#
t_u<-as.numeric(quantile(boot.T,p=0.975))#
t_l<-as.numeric(quantile(boot.T,p=0.025))#
#
c(beta-t_u*se,beta-t_l*se)
35*6
210*9
35*9+65
35*6 +50
300/9
1.2^3
1.2^4
1.2^5
1.2^10
6.19*1000
sum(1:10)
sum(1:5)
sum(1:7)
180/2.5
72/12
120/2.5
48/12
6.6+0.6+2.8+5.2
15.2/4
library(quantreg)#
library(ismev)
require(quantreg)
$139.26+$305.47+$416.41-$420
139.26+305.47+416.41-420
help(rexp)
R1<-cbind((rexp(20,rate=0.001),rexp(20,rate=0.01)))
R1<-c((rexp(20,rate=0.001),rexp(20,rate=0.01)))
R1<-c((rexp(20,rate=0.001),(rexp(20,rate=0.01)))
R1<-c((rexp(20,rate=0.001)),(rexp(20,rate=0.01)))
R1
R1<-cbind((rexp(20,rate=0.001)),(rexp(20,rate=0.01)))
R1
R1<-cbind((rexp(20,rate=0.001)),(rexp(20,rate=0.01)))
round(R1)
as.integer(R1)
R1
round(R1)
plot(R1)
plot(R1[,1])
plot(order(R1[,1]))
plot(order(R1[,1],decreasing=T))
plot(R1[,1])
help(ggplot)
library(ggplot)
install.packages(ggplot)
install.packages(ggplot2)
help(ggplot2)
1-(10/25)^2-(15/25)^2
(1-(5/12)^2-(7/12)^2)*(0.5)+(1-(5/13)^2-(8/13)^2))*0.5
(1-(5/12)^2-(7/12)^2)*(0.5)+(1-(5/13)^2-(8/13)^2)*0.5
setwd("/Users/zachang/Desktop/Data_Science_Course/homework/ZacharyAng/Data")#
#load libraries#
library(lpSolve)#
library(stringr)#
library(plyr)#
library(httr)#
library(rjson)#
library(ggplot2)#
# Read the Data in
Indmat=c()#
i=8#
	df1=read.csv(paste("Optimised Predictions for Gameweek",i,".csv"),header=T)#
	df2=read.csv(paste("Optimised Predictions for Gameweek",i+1,".csv"),header=T)#
	Indmat=append(Indmat,unique(df1$id)==df2$id)
Indmat
unique(df1$id)
sort(df1$id)
Indmat=c()#
for (i in 8:26){#
	df1=read.csv(paste("Optimised Predictions for Gameweek",i,".csv"),header=T)#
	df2=read.csv(paste("Optimised Predictions for Gameweek",i+1,".csv"),header=T)#
	Indmat=append(Indmat,sort(df1$id)==sort(df2$id))#
}#
Indmat=matrix(Indmat,nrow=19,byrow=T)#
15-rowSums(Indmat)
Indmat=c()#
for (i in 8:25){#
	df1=read.csv(paste("Optimised Predictions for Gameweek",i,".csv"),header=T)#
	df2=read.csv(paste("Optimised Predictions for Gameweek",i+1,".csv"),header=T)#
	Indmat=append(Indmat,sort(df1$id)==sort(df2$id))#
}#
Indmat=matrix(Indmat,nrow=19,byrow=T)#
15-rowSums(Indmat)
Indmat
length(8:25)
Indmat=c()#
for (i in 8:25){#
	df1=read.csv(paste("Optimised Predictions for Gameweek",i,".csv"),header=T)#
	df2=read.csv(paste("Optimised Predictions for Gameweek",i+1,".csv"),header=T)#
	Indmat=append(Indmat,sort(df1$id)==sort(df2$id))#
}#
Indmat=matrix(Indmat,nrow=18,byrow=T)#
15-rowSums(Indmat)
Indmat
rowSums(Indmat)
log(0.95) - log(2) + 2 +0.01^2
(log(0.95)-log(2))/(-2*0.01)
(log(0.95)-log(2))/(-2*0.01&2)
(log(0.95)-log(2))/(-2*0.01^2)
(log(0.05)-log(2))/(-2*0.01&2)
(log(0.05)-log(2))/(-2*0.01^2)
df1$id
sort(df$id)
sort(df1$id)
x<-c(3,1,5,4)
y<-c(1,3,5,6)
sort(x)==sort(y)
unique(x)==unique(y)
x %in% y
Indmat=c()#
for (i in 8:25){#
	df1=read.csv(paste("Optimised Predictions for Gameweek",i,".csv"),header=T)#
	df2=read.csv(paste("Optimised Predictions for Gameweek",i+1,".csv"),header=T)#
	Indmat=append(Indmat,df1 %in% df2)#
}#
Indmat=matrix(Indmat,nrow=18,byrow=T)
Indmat
15-rowSums(Indmat)
14-rowSums(Indmat)
